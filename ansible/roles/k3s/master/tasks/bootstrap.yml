---
- name: Deploy kube-vip manifests
  block:
    - name: Create manifests directory
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server/manifests
        state: directory
        owner: root
        group: root
        mode: "0644"

    - name: Download vip rbac manifest
      ansible.builtin.get_url:
        url: https://kube-vip.io/manifests/rbac.yaml
        dest: /var/lib/rancher/k3s/server/manifests/vip-rbac.yaml
        owner: root
        group: root
        mode: "0644"

    - name: Copy vip manifest
      ansible.builtin.template:
        src: kube-vip.yaml.j2
        dest: /var/lib/rancher/k3s/server/manifests/vip.yaml
        owner: root
        group: root
        mode: "0644"

- name: Start K3s service
  ansible.builtin.systemd:
    name: k3s
    state: started

- name: Ensure control plane is available
  ansible.builtin.wait_for:
    port: "{{ k3s_api_port }}"
    host: "{{ inventory_hostname }}"
    delay: 5
    sleep: 5
    timeout: 300

# Follow cozystack's setup from here on out
# https://github.com/cozystack/cozystack/blob/df448b995ad5ace81c4159fb16fd14e1ccc85e56/scripts/installer.sh
- name: Bootstrap flux(operator)
  module_defaults:
    kubernetes.core.helm:
      kubeconfig: "{{ k3s_kubeconfig_file }}"
    kubernetes.core.k8s_info:
      kubeconfig: "{{ k3s_kubeconfig_file }}"
  block:
    - name: Install flux-operator Helm chart
      kubernetes.core.helm:
        name: fluxcd-operator
        chart_ref: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-operator
        namespace: flux-system
        create_namespace: true
        values:
          fullnameOverride: flux-operator
          tolerations:
            - key: node.kubernetes.io/not-ready
              operator: Exists
              effect: NoSchedule
          hostNetwork: true

    - name: Wait for fluxcd-operator fluxinstances CRD
      kubernetes.core.k8s_info:
        api_version: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        name: fluxinstances.fluxcd.controlplane.io
      register: result
      until: result.resources is defined and result.resources|length > 0
      retries: 60
      delay: 1

    - name: Install flux-instance Helm chart
      kubernetes.core.helm:
        name: fluxcd-instance
        chart_ref: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-instance
        namespace: flux-system
        values: "{{ lookup('template', 'fluxcd_values.yml.j2') | from_yaml }}"

#    - name: Wait for fluxcd helmreleases CRD
#      kubernetes.core.k8s_info:
#        api_version: apiextensions.k8s.io/v1
#        kind: CustomResourceDefinition
#        name: helmreleases.helm.toolkit.fluxcd.io
#      register: result
#      until: result.resources is defined and result.resources|length > 0
#      retries: 60
#      delay: 1

#    - name: Wait for fluxcd helmrepositories CRD
#      kubernetes.core.k8s_info:
#        api_version: apiextensions.k8s.io/v1
#        kind: CustomResourceDefinition
#        name: helmrepositories.source.toolkit.fluxcd.io
#      register: result
#      until: result.resources is defined and result.resources|length > 0
#      retries: 60
#      delay: 1

- name: Bootstrap cilium
  module_defaults:
    kubernetes.core.helm:
      kubeconfig: "{{ k3s_kubeconfig_file }}"
    kubernetes.core.k8s_info:
      kubeconfig: "{{ k3s_kubeconfig_file }}"
  block:
    - name: Add cilium repository
      kubernetes.core.helm_repository:
        repo_name: cilium
        repo_url: "https://helm.cilium.io/"

    - name: Install cilium Helm chart
      kubernetes.core.helm:
        name: cilium
        chart_ref: cilium/cilium
        chart_version: 1.18.0
        namespace: kube-system
        values: "{{ lookup('template', 'cilium_values.yml.j2') | from_yaml }}"
