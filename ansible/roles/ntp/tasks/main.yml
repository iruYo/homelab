---
- name: Install requirements
  ansible.builtin.apt:
    name: "{{ ntp_packages }}"
    state: present
    update_cache: true

- name: Ensure gpsd services are disabled for now
  ansible.builtin.service:
    name: "{{ item }}"
    state: stopped
    enabled: false
  loop:
    - gpsd
    - gpsd.socket

- name: Copy chrony configuration file
  ansible.builtin.template:
    src: "templates/chrony.conf.j2"
    dest: "/etc/chrony/chrony.conf"
    owner: root
    group: root
    mode: "0644"
  notify: Restart chrony

- name: "Adjust config.txt for GPS HAT"
  ansible.builtin.lineinfile:
    dest: /boot/firmware/config.txt
    regexp: "^{{ item }}"
    line: '{{ item }}'
  notify: Reboot
  with_items:
    - "dtoverlay=pps-gpio,gpiopin=18,capture_clear"
    - "dtoverlay=disable-bt"
    - "dtoverlay=disable-wifi"
    - "dtparam=uart0=on"
    - "dtparam=rtc=off"
    - "enable_uart=1"

- name: Ensure dynamic tics are disabled in cmdline.txt
  ansible.builtin.replace:
    path: /boot/firmware/cmdline.txt
    regexp: '^([\w](?!.*\bnohz=off\b).*)$'
    replace: '\1 nohz=off'
  notify: Reboot

- name: Ensure no console in cmdline.txt
  ansible.builtin.replace:
    path: /boot/firmware/cmdline.txt
    regexp: '^(.*)\b({{ item }})\b(\s+)?(.*)$'
    replace: '\1 \4'
  notify: Reboot
  with_items:
    - "console=serial0,[0-9]+"
    - "console=ttyAMA0,[0-9]+"

- name: "Add pps-gpio to modules"
  ansible.builtin.lineinfile:
    dest: /etc/modules
    regexp: "^pps-gpio"
    line: 'pps-gpio'
  notify: Reboot

- name: Disable hciuart service
  ansible.builtin.service:
    name: hciuart
    state: stopped
    enabled: false

- name: Reboot to make hardware available
  ansible.builtin.meta: flush_handlers

- name: Setup coalesce service, if possible
  ansible.builtin.include_tasks: coalesce.yml

- name: Setup ptp4l grandmaster service
  ansible.builtin.include_tasks: ptp4l.yml

- name: Setup satpulse backend
  when: ntp_satpulse_enabled
  ansible.builtin.include_tasks: satpulse.yml

- name: Setup gpsd configuration
  ansible.builtin.include_tasks: gpsd.yml

- name: Setup non-satpulse backend
  when: not ntp_satpulse_enabled
  block:
    - name: Ensure gpsd services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
        enabled: true
        daemon_reload: true
      loop:
        - gpsd
        - gpsd.socket

    - name: Copy phc2sys-gm service configuration
      ansible.builtin.copy:
        src: "phc2sys-gm.service"
        dest: /etc/systemd/system/phc2sys-gm.service
        owner: root
        group: root
        mode: "0755"

    - name: Ensure phc2sys-gm service
      ansible.builtin.systemd_service:
        name: phc2sys-gm.service
        state: started
        enabled: true
        daemon_reload: true
