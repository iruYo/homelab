---
- name: Create K3s configuration directory
  ansible.builtin.file:
    path: "{{ k3s_config_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Copy K3s token file
  ansible.builtin.copy:
    content: "{{ k3s_token }}"
    dest: "{{ k3s_token_file }}"
    owner: root
    group: root
    mode: "0600"

- name: Copy K3s configuration file
  ansible.builtin.template:
    src: "templates/config.yaml.j2"
    dest: "{{ k3s_config_file }}"
    owner: root
    group: root
    mode: "0644"

- name: Get K3s installed version
  ansible.builtin.command: k3s --version
  register: k3s_version_output
  changed_when: false
  ignore_errors: true

- name: Set K3s installed version
  when: k3s_version_output.rc == 0
  ansible.builtin.set_fact:
    k3s_installed_version: "{{ k3s_version_output.stdout_lines[0].split(' ')[2] }}"

- name: Install K3s if not installed or outdated
  when: ( k3s_version_output.rc != 0 or k3s_installed_version is version(k3s_version, '<') )
  block:
    - name: Download K3s install script
      ansible.builtin.get_url:
        url: https://get.k3s.io/
        dest: /usr/local/bin/k3s-install.sh
        owner: root
        group: root
        mode: "0755"
        timeout: 120

    - name: Run K3s install script
      ansible.builtin.command:
        cmd: /usr/local/bin/k3s-install.sh
      environment:
        INSTALL_K3S_VERSION: "{{ k3s_version }}"
        INSTALL_K3S_EXEC: "agent"
      changed_when: true
